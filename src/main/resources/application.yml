server:
  port: ${PORT:8080}
  servlet:
    context-path: ${BASE_URL}

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESSKEY}
      secret-key: ${S3_SECRETKEY}
    s3:
      bucket: ${S3_NAME}
    region:
      static: ap-northeast-2
    stack:
      auto: false

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  profiles:
    active: prod
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        database-platform: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        default_batch_fetch_size: 1000
  sql:
    init:
#      mode: always
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_REST_API_KEY}
            redirect-uri: ${KAKAO_REDIRECT_URL}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  banner:
    image:
      location: classpath:teampple.png
      width: 125
      height: 10
      
token:
  secret: ${JWT_SECRET}

logging.level:
  org.hibernate.SQL: debug
#  org.hibernate.type: trace