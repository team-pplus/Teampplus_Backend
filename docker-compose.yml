version: "3"

networks:
  redis-network:
    driver: bridge

services:
  redis-master:
    image: redis
    command: redis-server ~/srv/ubuntu/src/main/java/Backend/teampple/global/config/redis_6379.conf
    ports:
      - "6379:6379"
    volumes:
      - ./redis-master/data:/data
    networks:
      - redis-network

  redis-slave1:
    image: redis
    command: redis-server ~/srv/ubuntu/src/main/java/Backend/teampple/global/config/redis_6380.conf
    ports:
      - "6380:6380"
    volumes:
      - ./redis-slave1/data:/data
    networks:
      - redis-network

  redis-slave2:
    image: redis
    command: redis-server ~/srv/ubuntu/src/main/java/Backend/teampple/global/config/redis_6381.conf
    ports:
      - "6381:6381"
    volumes:
      - ./redis-slave2/data:/data
    networks:
      - redis-network

  redis-sentinel1:
    image: redis
    command: redis-sentinel ~/srv/ubuntu/src/main/java/Backend/teampple/global/config/sentinel_26380.conf
    ports:
      - "26379:26379"
    volumes:
      - ./sentinel1:/sentinel
    depends_on:
      - redis-master
    networks:
      - redis-network

  redis-sentinel2:
    image: redis
    command: redis-sentinel ~/srv/ubuntu/src/main/java/Backend/teampple/global/config/sentinel_26380.conf
    ports:
      - "26380:26380"
    volumes:
      - ./sentinel2:/sentinel
    depends_on:
      - redis-master
    networks:
      - redis-network

  redis-sentinel3:
    image: redis
    command: redis-sentinel ~/srv/ubuntu/src/main/java/Backend/teampple/global/config/sentinel_26380.conf
    ports:
      - "26381:26379"
    volumes:
      - ./sentinel3:/sentinel
    depends_on:
      - redis-master
    networks:
      - redis-network

  backend-dev:
    image: squirmm/teampple-server-dev:dev
    container_name: backend-dev
    hostname: backend-dev
    expose:
      - "8080"

  nginx:
    depends_on:
      - backend-dev
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./config/nginx
    ports:
      - "80:80"