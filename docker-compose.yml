version: "3"

networks:
  redis-network:
    driver: bridge

services:
  redis-master:
    image: bitnami/redis:latest
    environment:
#      - REDIS_PASSWORD="${REDIS_PASSWORD}"  # 비밀번호 설정
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes
#      - REDIS_MAX_MEMORY=300mb  # 스왑 메모리 설정
#      - REDIS_MAX_MEMORY_POLICY=allkeys-lru  # 스왑 메모리 정책 설정
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - redis-network

  redis-slave:
    image: bitnami/redis:latest
    environment:
#      - REDIS_PASSWORD="${REDIS_PASSWORD}"  # 비밀번호 설정
#      - REDIS_MASTER_PASSWORD="${REDIS_PASSWORD}"
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      # default
#      - REDIS_MASTER_PORT_NUMBER=6379
    ports:
      - "127.0.0.1:6380-6381:6379"
    depends_on:
      - redis-master
    networks:
      - redis-network

  redis-sentinel:
    image: bitnami/redis-sentinel:latest
    environment:
#      - REDIS_SENTINEL_PASSWORD="${REDIS_PASSWORD}"
#      - REDIS_MASTER_PASSWORD="${REDIS_PASSWORD}"
      - ALLOW_EMPTY_PASSWORD=yes
#      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=3000
      - REDIS_MASTER_HOST=redis-master
      # default
#      - REDIS_MASTER_SET=mymaster
#      - REDIS_MASTER_PORT_NUMBER=6379
#      - REDIS_SENTINEL_QUORUM=2
    depends_on:
      - redis-master
      - redis-slave
    ports:
      - "127.0.0.1:26379-26381:26379-26381"
    networks:
      - redis-network

  backend-dev:
    image: squirmm/teampple-server-dev:dev
    container_name: backend-dev
    hostname: backend-dev
    expose:
      - "8080"

  nginx:
    depends_on:
      - backend-dev
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./config/nginx
    ports:
      - "80:80"